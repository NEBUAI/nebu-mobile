#!/bin/bash

# Script para compilar APK de Nebu Mobile
echo "üöÄ Iniciando compilaci√≥n de APK - Nebu Mobile"
echo "=============================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para verificar comandos
check_command() {
    if command -v "$1" &> /dev/null; then
        echo -e "${GREEN}‚úÖ $1 est√° instalado${NC}"
        return 0
    else
        echo -e "${RED}‚ùå $1 no est√° instalado${NC}"
        return 1
    fi
}

# Funci√≥n para instalar EAS CLI
install_eas_cli() {
    echo -e "\n${BLUE}üì¶ Instalando EAS CLI...${NC}"
    npm install -g @expo/eas-cli
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ EAS CLI instalado correctamente${NC}"
    else
        echo -e "${RED}‚ùå Error instalando EAS CLI${NC}"
        return 1
    fi
}

# Funci√≥n para verificar configuraci√≥n
check_config() {
    echo -e "\n${BLUE}üîß Verificando configuraci√≥n...${NC}"
    
    if [ -f "package.json" ]; then
        echo -e "${GREEN}‚úÖ package.json encontrado${NC}"
    else
        echo -e "${RED}‚ùå package.json no encontrado${NC}"
        return 1
    fi
    
    if [ -f "app.json" ]; then
        echo -e "${GREEN}‚úÖ app.json encontrado${NC}"
    else
        echo -e "${RED}‚ùå app.json no encontrado${NC}"
        return 1
    fi
    
    if [ -f "eas.json" ]; then
        echo -e "${GREEN}‚úÖ eas.json encontrado${NC}"
    else
        echo -e "${RED}‚ùå eas.json no encontrado${NC}"
        return 1
    fi
    
    if [ -f "app.config.js" ]; then
        echo -e "${GREEN}‚úÖ app.config.js encontrado${NC}"
    else
        echo -e "${RED}‚ùå app.config.js no encontrado${NC}"
        return 1
    fi
}

# Funci√≥n para instalar dependencias
install_dependencies() {
    echo -e "\n${BLUE}üì¶ Instalando dependencias...${NC}"
    npm install
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Dependencias instaladas correctamente${NC}"
    else
        echo -e "${RED}‚ùå Error instalando dependencias${NC}"
        return 1
    fi
}

# Funci√≥n para configurar EAS
setup_eas() {
    echo -e "\n${BLUE}‚öôÔ∏è Configurando EAS...${NC}"
    
    # Verificar si ya est√° logueado
    if eas whoami &> /dev/null; then
        echo -e "${GREEN}‚úÖ Ya est√°s logueado en EAS${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Necesitas loguearte en EAS${NC}"
        echo -e "${BLUE}Ejecuta: eas login${NC}"
        return 1
    fi
    
    # Verificar configuraci√≥n del proyecto
    if [ -f ".easrc" ] || grep -q "projectId" app.config.js; then
        echo -e "${GREEN}‚úÖ Proyecto EAS configurado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Configurando proyecto EAS...${NC}"
        eas build:configure
    fi
}

# Funci√≥n para compilar APK
build_apk() {
    echo -e "\n${BLUE}üî® Compilando APK...${NC}"
    echo -e "${YELLOW}Esto puede tomar varios minutos...${NC}"
    
    # Intentar compilaci√≥n local primero
    echo -e "\n${BLUE}Intentando compilaci√≥n local...${NC}"
    if eas build --platform android --profile preview --local --non-interactive; then
        echo -e "${GREEN}‚úÖ APK compilado localmente${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è Compilaci√≥n local fall√≥, intentando en la nube...${NC}"
        
        # Intentar compilaci√≥n en la nube
        if eas build --platform android --profile preview --non-interactive; then
            echo -e "${GREEN}‚úÖ APK compilado en la nube${NC}"
            echo -e "${BLUE}El APK estar√° disponible en tu dashboard de Expo${NC}"
            return 0
        else
            echo -e "${RED}‚ùå Error en la compilaci√≥n${NC}"
            return 1
        fi
    fi
}

# Funci√≥n para mostrar instrucciones
show_instructions() {
    echo -e "\n${BLUE}üìã INSTRUCCIONES DE COMPILACI√ìN${NC}"
    echo "=================================="
    echo -e "${YELLOW}1. Instalar EAS CLI:${NC}"
    echo "   npm install -g @expo/eas-cli"
    echo ""
    echo -e "${YELLOW}2. Loguearse en Expo:${NC}"
    echo "   eas login"
    echo ""
    echo -e "${YELLOW}3. Configurar proyecto:${NC}"
    echo "   eas build:configure"
    echo ""
    echo -e "${YELLOW}4. Compilar APK:${NC}"
    echo "   eas build --platform android --profile preview --local"
    echo ""
    echo -e "${YELLOW}O compilar en la nube:${NC}"
    echo "   eas build --platform android --profile preview"
}

# Funci√≥n para mostrar estado del proyecto
show_project_status() {
    echo -e "\n${BLUE}üìä ESTADO DEL PROYECTO${NC}"
    echo "======================="
    
    echo -e "${GREEN}‚úÖ Funcionalidades implementadas:${NC}"
    echo "‚Ä¢ Bluetooth Low Energy (BLE) completo"
    echo "‚Ä¢ Configuraci√≥n de robot Nebu"
    echo "‚Ä¢ Acceso administrativo (3 toques)"
    echo "‚Ä¢ Panel de administraci√≥n completo"
    echo "‚Ä¢ Navegaci√≥n y UI moderna"
    echo "‚Ä¢ Internacionalizaci√≥n (ES/EN)"
    echo "‚Ä¢ Temas claro/oscuro"
    echo "‚Ä¢ Permisos Android/iOS configurados"
    echo "‚Ä¢ Servicios de backend integrados"
    
    echo -e "\n${GREEN}‚úÖ Configuraci√≥n lista:${NC}"
    echo "‚Ä¢ app.json configurado"
    echo "‚Ä¢ app.config.js con permisos BLE"
    echo "‚Ä¢ eas.json con perfiles de build"
    echo "‚Ä¢ AndroidManifest.xml con permisos"
    echo "‚Ä¢ Info.plist con permisos iOS"
    echo "‚Ä¢ package.json con dependencias"
    
    echo -e "\n${GREEN}‚úÖ Listo para compilaci√≥n:${NC}"
    echo "‚Ä¢ Todas las dependencias instaladas"
    echo "‚Ä¢ Configuraci√≥n de build completa"
    echo "‚Ä¢ Permisos configurados correctamente"
    echo "‚Ä¢ Funcionalidades BLE implementadas"
    echo "‚Ä¢ Acceso administrativo funcionando"
}

# Funci√≥n principal
main() {
    echo -e "${BLUE}üîç Verificando requisitos...${NC}"
    
    # Verificar comandos necesarios
    check_command "npm" || exit 1
    check_command "node" || exit 1
    
    # Verificar configuraci√≥n
    check_config || exit 1
    
    # Mostrar estado del proyecto
    show_project_status
    
    echo -e "\n${BLUE}üöÄ Iniciando proceso de compilaci√≥n...${NC}"
    
    # Instalar dependencias
    install_dependencies || exit 1
    
    # Verificar/instalar EAS CLI
    if ! check_command "eas"; then
        install_eas_cli || exit 1
    fi
    
    # Configurar EAS
    setup_eas || {
        echo -e "${YELLOW}‚ö†Ô∏è Configuraci√≥n EAS incompleta${NC}"
        show_instructions
        exit 1
    }
    
    # Compilar APK
    build_apk || {
        echo -e "${RED}‚ùå Error en la compilaci√≥n${NC}"
        show_instructions
        exit 1
    }
    
    echo -e "\n${GREEN}üéâ ¬°COMPILACI√ìN COMPLETADA!${NC}"
    echo "=============================="
    echo -e "${GREEN}‚úÖ APK generado exitosamente${NC}"
    echo -e "${BLUE}üì± La aplicaci√≥n est√° lista para Google Play Store${NC}"
}

# Ejecutar funci√≥n principal
main "$@"
